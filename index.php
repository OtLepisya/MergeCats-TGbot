<?php
echo"dsds";

include 'minilib.php';
function run(){
  $arr = file_get_contents('php://input');
	$data = json_decode($arr, true);
  file_put_contents('info/message.json',$arr);
 

  $bot = new bot("1618755473:AAHoWQLqmguqUsf83OMKbEEOgbMTMlV7rt4");
  $bot -> update($data);
  $cryptosoul = new cryptosoul("m9DeeAgkJPPvGWwuQmGTB6ZcKYAYakQp");
  
  if(!empty($bot->d_text)){
    switch($bot->d_text){
      case "/start":{
        $text = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å!\n–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –≤–µ—Ä—Å–∏—é –∏–≥—Ä—ã MergeCat. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏";
        $buttons = array(
          array(
            'üíº–ê–∫–∫–∞—É–Ω—Ç',
            'üì¶LootBox-—ã',
            'üé∞Spin'
          ),
          array(
            'üí∞–ë–∞–ª–∞–Ω—Å',
            'üèÜ–†–µ–π—Ç–∏–Ω–≥',
            '‚ùî–ü–æ–º–æ—â—å'
          ),
          array(
            'üîë–°–º–µ–Ω–∏—Ç—å API-key'
          )
        );
        $keyb = keyboard(json_encode($buttons), 'true', 'false', 'false');
        $bot -> send_keyb($bot -> d_chatid, $text,$keyb);
        break;
      }
      case "üì¶LootBox-—ã":{
        $buttons = [
          array(
            array(
            'text' => 'üì¶–û—Ç–∫—Ä—ã—Ç—å Free capsule',
            'callback_data' => 'Free'
            ),
            array(
              'text' => 'üí∞–û—Ç–∫—Ä—ã—Ç—å Iron capsule',
              'callback_data' => 'Iron'
            )
          ),
          array(
            array(
            'text' => 'üëë–û—Ç–∫—Ä—ã—Ç—å Golden capsule',
            'callback_data' => 'Golden'
            ),
            array(
              'text' => 'üíé–û—Ç–∫—Ä—ã—Ç—å Diamond capsule',
              'callback_data' => 'Diamond'
            )
          )
        ];
      
        $text = $cryptosoul -> aviablelb();
        $buttons = array("inline_keyboard"=>$buttons);
        $bot -> send_keyb($bot -> d_chatid, $text, json_encode($buttons));
        break;
      }
      case "üíº–ê–∫–∫–∞—É–Ω—Ç":{
        $text = $cryptosoul -> account();
        $bot -> send($bot -> d_chatid, $text);
        break;
      }
      case "‚ùî–ü–æ–º–æ—â—å":{
        $text = "–° —á–µ–º –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?";
        $buttons = [
            array(
              array(
              'text' => '‚ùî–í—ã–≤–æ–¥',
              'callback_data' => 'helpwithdraw'
              ),
              array(
              'text' => '‚ùî–ö–æ—à–µ–ª—å–∫–∏',
              'callback_data' => 'helpwall'
              )
            ),
            array(
              array(
              'text' => '‚ùî–ê–¥—Ä–µ—Å—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞',
              'callback_data' => 'helpcont'
              ),
              array(
              'text' => '‚ùî–û–±–º–µ–Ω',
              'callback_data' => 'helpexch'
              )
            )
          ];
          $buttons = array("inline_keyboard"=>$buttons);
          $bot -> send_keyb($bot -> d_chatid, $text, json_encode($buttons));
        break;
      }
      case "üèÜ–†–µ–π—Ç–∏–Ω–≥":{
        $text = $cryptosoul -> top();
        $bot -> send($bot -> d_chatid, $text);
        break;
      }
      case "üé∞Spin":{
        $text = $cryptosoul -> spincheck();

        $buttons = [[
          array(
            'text' => '–í—Ä–∞—â–∞—Ç—å –∫–æ–ª–µ—Å–æ',
            'callback_data' => 'spin'
          ),
          array(
            'text' => '–í—Ä–∞—â–∞—Ç—å –∑–∞ 18 SOUL',
            'callback_data' => 'spin18'
          )
          
        ]];
        $buttons = array("inline_keyboard"=>$buttons);
        $bot -> send_keyb($bot -> d_chatid, $text, json_encode($buttons));

        break;
      }
      case "üí∞–ë–∞–ª–∞–Ω—Å":{
        $text = $cryptosoul -> balance();

        $buttons = [
          array(
            array(
            'text' => '–±–∞–ª–∞–Ω—Å –∏–≥—Ä—ã => –±–∞–ª–∞–Ω—Å —Å–∞–π—Ç–∞',
            'callback_data' => 'tosite'
          )
          ),
          array(
            array(
            'text' => '–±–∞–ª–∞–Ω—Å —Å–∞–π—Ç–∞ => –±–∞–ª–∞–Ω—Å –∏–≥—Ä—ã',
            'callback_data' => 'togame'
          )
          )
        ];
        $buttons = array("inline_keyboard"=>$buttons);
        $bot -> send_keyb($bot -> d_chatid, $text, json_encode($buttons));


        break;
      }
    }
  }

  if(!empty($bot->d_cbdata)){
    switch ($bot->d_cbdata){
      case "Free" :{
        $text = $cryptosoul -> openlootbox(1);
        $bot -> send($bot -> d_cbid, $text);
        break;
      }
      case "Iron" :{
        $text = $cryptosoul -> openlootbox(2);
        $bot -> send($bot -> d_cbid, $text);
        break;
      }
      case "Golden" :{
        $text = $cryptosoul -> openlootbox(3);
        $bot -> send($bot -> d_cbid, $text);
        break;
      }
      case "Diamond" :{
        $text = $cryptosoul -> openlootbox(4);
        $bot -> send($bot -> d_cbid, $text);
        break;
      }
      case "tosite" :{
        $text = $cryptosoul -> btosite();
        $bot -> send($bot -> d_cbid, $text);
        break;
      }
      case "togame" :{
        $text = $cryptosoul -> btogame();
        $bot -> send($bot -> d_cbid, $text);
        break;
      }
      case "spin" :{
        $text = $cryptosoul -> spin(0);
        $bot -> send($bot -> d_cbid, $text);
        break;
      }
      case "spin18" :{
        $text = $cryptosoul -> spin(1);
        $bot -> send($bot -> d_cbid, $text);
        break;
      }
      case "helpcont" :{
        $text = "‚Ñπ –ï—Å–ª–∏ –∫–æ—à–µ–ª–µ–∫ –Ω–µ –≤–∏–¥–∏—Ç SOUL —Ç–æ–∫–µ–Ω:

Contract: <code>0xbb1f24c0c1554b9990222f036b0aad6ee4caec29</code>
Decimals: <code>18</code>
Symbol: <code>SOUL</code>

–í–Ω–∏–º–∞–Ω–∏–µ! –ù–µ –≤—Å–µ –∫–æ—à–µ–ª—å–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç SOUL —Ç–æ–∫–µ–Ω ";
        $bot -> send_html($bot -> d_cbid, $text);
        break;
      }
      case "helpexch" :{
        $text = '‚Ñπ –ë–∏—Ä–∂—ã –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–±–º–µ–Ω—è—Ç—å —Å–≤–æ–∏ —Ç–æ–∫–µ–Ω—ã: 

‚úÖ <a href="https://www.binance.org/en/trade/mini/SOUL-D11M_BNB">Binance</a>
‚úÖ <a href="https://app.uniswap.org/#/swap?inputCurrency=0xbb1f24c0c1554b9990222f036b0aad6ee4caec29&outputCurrency=ETH">Uniswap</a>
‚úÖ <a href="https://www.hotbit.io/exchange?symbol=CSOUL_USDT">HotBit</a>
‚úÖ <a href="https://mercatox.com/exchange/SOUL/ETH">Mercatox</a>

';
        $bot -> send_html($bot -> d_cbid, $text);
        break;
      }
      case "helpwall" :{
        $text = '‚Ñπ –î–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏: 

‚úÖ <a href="https://metamask.io/download.html">Metamask</a>
‚úÖ <a href="https://token.im/">ImToken</a>
‚úÖ <a href="https://trustwallet.com/">TrustWallet</a>
‚úÖ <a href="https://eidoo.io/">Eidoo</a>
‚úÖ <a href="https://www.myetherwallet.com">MyEtherWallet</a>

';
        $bot -> send_html($bot -> d_cbid, $text);
        break;
      }
      case "helpwithdraw" :{
        $text = '‚Ñπ –ü–æ–ª–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤—ã–≤–æ–¥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ <a href="https://cryptosoul.io/ru/how-to-withdraw-soul">–∑–¥–µ—Å—å</a>';
        $bot -> send_html($bot -> d_cbid, $text);
        break;
      }
    }

  }


  if($bot->d_text == 'keyb'){
    $buttons = array(
      array(
        '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
      ),
      array(
        '–û—Ç–∑—ã–≤'
      )
    );
    $keyb = keyboard(json_encode($buttons), 'true', 'false', 'false');
    $bot -> send_keyb($bot -> d_chatid, "hell", $keyb);
    
  }

  if($bot->d_text == 'inkeyb'){
    $buttons = [[
      array(
        'text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        'callback_data' => 'm'
      ),
      array(
        'text' => '–û—Ç–∑—ã–≤',
        'callback_data' => 'b'
      ),
    ]];
    $buttons = array("inline_keyboard"=>$buttons);
    $bot -> send_keyb($bot -> d_chatid, "hell", json_encode($buttons));
    
  }

}
run();
?>
